spring.application.name=veterinarinary
spring.datasource.url=jdbc:mysql://localhost:3306/veterinary
#user DB manager
spring.datasource.username=root
#password user db manager
spring.datasource.password=
#driver mysql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#DDL
#create=borra la base datos si existe
#y crea la base datos cuando se ejecuta el servicio
#create-drop=borra la base datos si existe
#y crea la base datos cuando se ejecuta el servicio
#y se elimina cuando se detiene el servicio
#update=verifica la base datos si es distinta al modelo la actualiza
#actualiza la estructura
#none=no ejecutará DDL
spring.jpa.hibernate.ddl-auto=update

spring.jpa.show-sql=true

server.port=8080


# === Configuración SMTP para envío de correos ===

# Host SMTP (por ejemplo, smtp.gmail.com para Gmail)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=franciscoandradebermeo560@gmail.com
spring.mail.password=komgcotobesacnqk
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.from=franciscoandradebermeo560@gmail.com

# Opcional: Nombre amigable que verá el destinatario
spring.mail.properties.mail.smtp.from=veterinarinary <franciscoandradebermeo560@gmail.com>

# === Configuración JWT para recuperación de contraseña ===

# Clave secreta para firmar el JWT de recuperación de contraseña (elige una clave segura)
security.jwt.password.secret= G8zJ!x7&1qP4#kR9tLmV2bX5eC6rZ0wA

# Tiempo de expiración del token en milisegundos (ejemplo: 15 minutos)
security.jwt.password.expiration=900000